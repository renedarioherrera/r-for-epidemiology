{
  "hash": "91e50d626e97dcc803a90d238ee0809d",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n# Tidy Data\n\nThis page is still being worked on.\n\n## Learning Objectives\n\nIn this chapter, readers will:\n\n-   identify what makes data \"tidy\"\n-   identify how to make messy data tidy\n\n## Introduction\n\nAfter importing my data, but before any meaningful data analysis, I make sure my data is \"tidy\". Tidy data follows three rules as suggested by [Hadley Wickham and Garrett Grolemund](https://r4ds.had.co.nz/tidy-data.html):\n\n1.  Each variable must have its own column.\n2.  Each observation must have its own row.\n3.  Each value must have its own cell.\n\n[![rules of tidy data](assets/tidy-1.png)](https://r4ds.had.co.nz/tidy-data.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # load readr package from within tidyverse\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.7      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidycensus) # load the tidycensus package\nlibrary(janitor) # load janitor package\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\n# import US Census ACS data using the tidycensus package library \npoverty_wide <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    \"population\" = \"S1701_C01_001\",\n    \"poverty\" = \"S1701_C03_002\",\n    \"median_income\" = \"S1901_C01_012\",\n    \"median_rent\" = \"DP04_0134\",\n    \"median_age\" = \"B01002_001\",\n    \"bachelor_degree_percent\" = \"DP02_0065P\",\n    \"broadband_percent\" = \"DP02_0153P\",\n    \"hispanic_percent\" = \"DP05_0071P\",\n    \"sex_percent\" = \"S0101_C06_008\",\n    \"womens_earnings_percent\" = \"S2411_C04_001\",\n    \"gini_index\" = \"B19083_001\",\n    \"white_not_hispanic\" = \"B01001H_001\"\n    ),\n  year = 2019,\n  geometry = FALSE,\n  survey = \"acs5\",\n  state = \"AZ\",\n  cache_table = TRUE,\n  output = \"wide\"\n) %>%\n  clean_names() # use janitor to clean the names \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2015-2019 5-year ACS\nFetching data by table type (\"B/C\", \"S\", \"DP\") and combining the result.\n```\n:::\n\n```{.r .cell-code}\n# inspect the dataset\n# note the data is wide\nglimpse(poverty_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,526\nColumns: 26\n$ geoid                     <chr> \"04001942600\", \"04001942700\", \"04001944000\",…\n$ name                      <chr> \"Census Tract 9426, Apache County, Arizona\",…\n$ median_age_e              <dbl> 32.8, 33.6, 33.9, 27.9, 27.9, 27.9, 34.2, 30…\n$ median_age_m              <dbl> 4.5, 2.5, 3.5, 1.7, 5.9, 4.0, 2.2, 2.1, 1.9,…\n$ gini_index_e              <dbl> 0.5612, 0.4984, 0.5446, 0.5359, 0.4998, 0.52…\n$ gini_index_m              <dbl> 0.0521, 0.0208, 0.0378, 0.0263, 0.0444, 0.05…\n$ white_not_hispanic_e      <dbl> 0, 35, 140, 154, 188, 17, 72, 81, 48, 113, 7…\n$ white_not_hispanic_m      <dbl> 12, 25, 61, 53, 74, 20, 30, 80, 29, 62, 46, …\n$ population_e              <dbl> 1742, 5345, 6543, 5639, 4400, 4009, 6005, 39…\n$ population_m              <dbl> 206, 365, 570, 461, 449, 664, 378, 342, 272,…\n$ poverty_e                 <dbl> 45.4, 44.7, 57.5, 61.7, 62.2, 60.6, 53.6, 45…\n$ poverty_m                 <dbl> 13.4, 7.0, 9.6, 6.6, 12.7, 14.6, 8.1, 8.2, 7…\n$ median_income_e           <dbl> 19250, 26646, 33472, 24696, 26840, 24173, 20…\n$ median_income_m           <dbl> 3355, 2332, 8117, 3776, 5187, 4876, 1680, 43…\n$ sex_percent_e             <dbl> 4.6, 6.8, 6.7, 3.9, 2.7, 6.0, 6.0, 3.9, 7.0,…\n$ sex_percent_m             <dbl> 2.5, 1.8, 1.8, 1.2, 1.9, 3.0, 2.0, 1.4, 1.8,…\n$ womens_earnings_percent_e <dbl> 137.3, 87.1, 114.1, 97.8, 88.8, 84.9, 94.7, …\n$ womens_earnings_percent_m <dbl> 56.8, 10.8, 41.4, 14.2, 69.8, 48.6, 12.0, 18…\n$ median_rent_e             <dbl> NA, 579, 549, 339, 473, 537, 414, 426, 482, …\n$ median_rent_m             <dbl> NA, 104, 65, 42, 39, 142, 20, 41, 49, 62, 12…\n$ bachelor_degree_percent_e <dbl> 2.1, 4.6, 6.2, 6.2, 6.4, 6.8, 4.5, 6.7, 5.7,…\n$ bachelor_degree_percent_m <dbl> 1.2, 1.0, 2.3, 1.6, 2.8, 3.5, 1.2, 1.4, 1.4,…\n$ broadband_percent_e       <dbl> 12.1, 17.8, 29.9, 26.2, 16.9, 16.0, 10.8, 27…\n$ broadband_percent_m       <dbl> 4.9, 2.7, 4.9, 3.6, 5.4, 6.2, 2.2, 3.9, 3.2,…\n$ hispanic_percent_e        <dbl> 0.0, 0.6, 1.1, 1.6, 0.3, 0.1, 0.7, 0.8, 2.6,…\n$ hispanic_percent_m        <dbl> 2.0, 0.5, 0.9, 0.8, 0.5, 0.3, 0.6, 0.8, 1.2,…\n```\n:::\n\n```{.r .cell-code}\n# use pivot_longer to make the data tidy \npoverty_wide %>%\n  pivot_longer(\n    cols = all_of(c(\"geoid\", \"name\")),\n    names_to = \"name\",\n    values_to = \"value\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,052 × 26\n   median_age_e median…¹ gini_…² gini_…³ white…⁴ white…⁵ popul…⁶ popul…⁷ pover…⁸\n          <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1         32.8      4.5   0.561  0.0521       0      12    1742     206    45.4\n 2         32.8      4.5   0.561  0.0521       0      12    1742     206    45.4\n 3         33.6      2.5   0.498  0.0208      35      25    5345     365    44.7\n 4         33.6      2.5   0.498  0.0208      35      25    5345     365    44.7\n 5         33.9      3.5   0.545  0.0378     140      61    6543     570    57.5\n 6         33.9      3.5   0.545  0.0378     140      61    6543     570    57.5\n 7         27.9      1.7   0.536  0.0263     154      53    5639     461    61.7\n 8         27.9      1.7   0.536  0.0263     154      53    5639     461    61.7\n 9         27.9      5.9   0.500  0.0444     188      74    4400     449    62.2\n10         27.9      5.9   0.500  0.0444     188      74    4400     449    62.2\n# … with 3,042 more rows, 17 more variables: poverty_m <dbl>,\n#   median_income_e <dbl>, median_income_m <dbl>, sex_percent_e <dbl>,\n#   sex_percent_m <dbl>, womens_earnings_percent_e <dbl>,\n#   womens_earnings_percent_m <dbl>, median_rent_e <dbl>, median_rent_m <dbl>,\n#   bachelor_degree_percent_e <dbl>, bachelor_degree_percent_m <dbl>,\n#   broadband_percent_e <dbl>, broadband_percent_m <dbl>,\n#   hispanic_percent_e <dbl>, hispanic_percent_m <dbl>, name <chr>, …\n```\n:::\n\n```{.r .cell-code}\npoverty_tidy <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    \"population\" = \"S1701_C01_001\",\n    \"poverty\" = \"S1701_C03_002\",\n    \"median_income\" = \"S1901_C01_012\",\n    \"median_rent\" = \"DP04_0134\",\n    \"median_age\" = \"B01002_001\",\n    \"bachelor_degree_percent\" = \"DP02_0065P\",\n    \"broadband_percent\" = \"DP02_0153P\",\n    \"hispanic_percent\" = \"DP05_0071P\",\n    \"sex_percent\" = \"S0101_C06_008\",\n    \"womens_earnings_percent\" = \"S2411_C04_001\",\n    \"gini_index\" = \"B19083_001\",\n    \"white_not_hispanic\" = \"B01001H_001\"\n    ),\n  year = 2019,\n  geometry = FALSE,\n  survey = \"acs5\",\n  state = \"AZ\",\n  cache_table = TRUE,\n  output = \"tidy\"\n) %>%\n  clean_names()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2015-2019 5-year ACS\nFetching data by table type (\"B/C\", \"S\", \"DP\") and combining the result.\n```\n:::\n\n```{.r .cell-code}\nglimpse(poverty_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 18,312\nColumns: 5\n$ geoid    <chr> \"04001942600\", \"04001942600\", \"04001942600\", \"04001942600\", \"…\n$ name     <chr> \"Census Tract 9426, Apache County, Arizona\", \"Census Tract 94…\n$ variable <chr> \"white_not_hispanic\", \"median_age\", \"gini_index\", \"sex_percen…\n$ estimate <dbl> 0.0000, 32.8000, 0.5612, 4.6000, 1742.0000, 45.4000, 19250.00…\n$ moe      <dbl> 12.0000, 4.5000, 0.0521, 2.5000, 206.0000, 13.4000, 3355.0000…\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}